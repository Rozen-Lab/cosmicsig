library(ICAMS)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_data.R", echo=TRUE)
devtools::load_all(".")
SBS96_sigs_GRCh38_genome <- signature$SBS96
SBS96_sigs_GRCh38_exome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh38",
target.region = "exome")
SBS96_sigs_GRCh37_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh37",
target.region = "genome")
SBS96_sigs_mm10_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "mm10",
target.region = "genome")
head(SBS96_sigs_mm10_genome[,1])
head(SBS96_sigs_GRCh37_genome[,1])
head(SBS96_sigs_GRCh38_genome[,1])
foo <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "mm9",
target.region = "genome")
library(BSgenome.GSE56939)
foo <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = BSgenome.GSE56939,
target.region = "genome")
? left_join
usethis::use_build_ignore(files = ".Rhistory")
usethis::use_git_ignore(files = ".Rhistory")
usethis::use_git_ignore(ignores = ".Rhistory")
# Download COSMIC v3.1 SBS96 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/442/COSMIC_v3.1_SBS_GRCh38.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_SBS_GRCh38.txt",
quiet = TRUE)
# Download COSMIC v3.1 DBS78 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/436/COSMIC_v3.1_DBS_GRCh38.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_DBS_GRCh38.txt",
quiet = TRUE)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/generate_COSMIC_v3.1_genome_sigs.R", echo=TRUE)
devtools::load_all(".")
devtools::load_all(".")
# Download COSMIC v3.0 SBS96 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/431/COSMIC_v3_SBS_GRCh38.txt",
destfile = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_SBS_GRCh38.txt",
quiet = TRUE)
# Download COSMIC v3.0 DBS78 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/425/COSMIC_v3_DBS_GRCh38.txt",
destfile = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_DBS_GRCh38.txt",
quiet = TRUE)
devtools::load_all(".")
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.0/code/generate_COSMIC_v3.0_genome_sigs.R", echo=TRUE)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.0/code/generate_COSMIC_v3.0_genome_sigs.R", echo=TRUE)
devtools::load_all(".")
?get_etiology
? SBS96_ID_to_SBS192_ID
devtools::spell_check()
spelling::update_wordlist()
devtools::run_examples()
devtools::run_examples()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::spell_check()
devtools::build_manual()
devtools::load_all(".")
SBS96_sigs_GRCh38_genome <- signature$SBS96
#'
# Transform SBS96 GRCh38 genome signatures to GRCh38 exome signatures
SBS96_sigs_GRCh38_exome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh38",
target.region = "exome")
#'
# Transform SBS96 GRCh38 genome signatures to GRCh37 genome signatures
SBS96_sigs_GRCh37_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh37",
target.region = "genome")
#'
# Transform SBS96 GRCh38 genome signatures to mm10 genome signatures
SBS96_sigs_mm10_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "mm10",
target.region = "genome")
devtools::load_all(".")
library(ICAMS)
SBS96_sigs_GRCh38_genome <- signature$SBS96
#'
# Transform SBS96 GRCh38 genome signatures to GRCh38 exome signatures
SBS96_sigs_GRCh38_exome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh38",
target.region = "exome")
#'
# Transform SBS96 GRCh38 genome signatures to GRCh37 genome signatures
SBS96_sigs_GRCh37_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "GRCh37",
target.region = "genome")
#'
# Transform SBS96 GRCh38 genome signatures to mm10 genome signatures
SBS96_sigs_mm10_genome <- TransformCatalog(catalog = SBS96_sigs_GRCh38_genome,
target.ref.genome = "mm10",
target.region = "genome")
head(PCAWG7::signature$genome$SBS96[, 1])
head(SBS96_sigs_GRCh38_genome[, 1])
head(SBS96_sigs_GRCh37_genome[, 1])
PCAWG7::signature$genome$SBS96[, 1] == SBS96_sigs_GRCh37_genome[, 1]
PCAWG7::signature$genome$SBS96[, 1] - SBS96_sigs_GRCh37_genome[, 1]
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
usethis::use_citation()
devtools::spell_check()
spelling::update_wordlist()
citation("cosmicsig")
citation("cosmicsig")
citation("cosmicsig")
citation("cosmicsig")
citation("cosmicsig")
citation("cosmicsig")
devtools::build_manual()
devtools::build_manual()
devtools::load_all(".")
devtools::build_manual()
R.version.string
500*5*1.07
# Source this file from cosmicsig package root
cat(getwd(), "\n")
? download.file
# Source this file from cosmicsig package root
cat(getwd(), "\n")
release <- "3.2"
genome <- c("GRCh37", "GRCh38", "mm9", "mm10", "rn6")
mutation_type <- c("SBS", "DBS", "ID")
folder_prefix <- "./data-raw/COSMIC_v3.2/data/"
folder_paths <- paste0(folder_prefix, genome)
folder_paths
folder_prefix <- paste0("./data-raw/COSMIC_v", release ,"/data/")
folder_prefix
folder_paths <- paste0(folder_prefix, genome)
folder_paths
? dir.create
# Create folders for putting the signature files for different genome
sapply(folder_paths, FUN = dir.create, recursive = TRUE, showWarnings = FALSE)
# Create folders for putting the signature files for different genome
out <- sapply(folder_paths, FUN = dir.create, recursive = TRUE, showWarnings = FALSE)
out
class(out)
release <- "3.2"
genomes <- c("GRCh37", "GRCh38", "mm9", "mm10", "rn6")
mutation_types <- c("SBS", "DBS", "ID")
url_prefix <- "https://cancer.sanger.ac.uk/signatures/documents/"
SBS_document_number <- 452:456
DBS_document_number <- 446:450
ID_document_number <- 451
folder_prefix <- paste0("./data-raw/COSMIC_v", release , "/data/")
folder_paths <- paste0(folder_prefix, genomes)
# Create folders for putting the signature files for different genomes
out <- sapply(folder_paths, FUN = dir.create, recursive = TRUE, showWarnings = FALSE)
# Download SBS signatures
for (i in length(genomes)) {
SBS_sig_filename <- paste0("COSMIC_v", release, "_SBS_", genomes[i], ".txt")
SBS_URL_path <- paste0(url_prefix, SBS_document_number[i], "/", SBS_sig_filename)
download.file(url = SBS_URL_path, destfile = SBS_sig_filename, quiet = TRUE)
}
# Download SBS signatures
for (i in length(genomes)) {
SBS_sig_filename <- paste0("COSMIC_v", release, "_SBS_", genomes[i], ".txt")
SBS_URL_path <- paste0(url_prefix, SBS_document_number[i], "/", SBS_sig_filename)
browser()
download.file(url = SBS_URL_path,
destfile = paste0(folder_paths[i], "/", SBS_sig_filename),
quiet = TRUE)
}
SBS_sig_filename
SBS_URL_path
# Download SBS signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <- paste0("COSMIC_v", release, "_SBS_", genomes[i], ".txt")
SBS_URL_path <- paste0(url_prefix, SBS_document_number[i], "/", SBS_sig_filename)
dest_file_path <- paste0(folder_paths[i], "/", SBS_sig_filename)
download.file(url = SBS_URL_path,
destfile = paste0(folder_paths[i], "/", SBS_sig_filename),
quiet = TRUE)
}
# Download DBS signatures
for (i in 1:length(genomes)) {
DBS_sig_filename <- paste0("COSMIC_v", release, "_DBS_", genomes[i], ".txt")
DBS_URL_path <- paste0(url_prefix, DBS_document_number[i], "/", DBS_sig_filename)
dest_file_path <- paste0(folder_paths[i], "/", DBS_sig_filename)
download.file(url = DBS_URL_path,
destfile = paste0(folder_paths[i], "/", DBS_sig_filename),
quiet = TRUE)
}
# Download ID signature (only available for GRCh37)
ID_sig_filename <- paste0("COSMIC_v", release, "_ID_", "GRCh37", ".txt")
ID_URL_path <- paste0(url_prefix, ID_document_number, "/", ID_sig_filename)
dest_file_path <- paste0(folder_paths[1], "/", ID_sig_filename)
download.file(url = ID_URL_path,
destfile = paste0(folder_paths[1], "/", ID_sig_filename),
quiet = TRUE)
# Currently SBS10c, SBS10d, SBS84, SBS85, SBS86, SBS87, SBS89, SBS91 (total 8)
# does not have TSB signature
SBS192_sig_number <- c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90, 92:94)
stopifnot(length(SBS192_sig_number) == 70)
SBS192_sig_ids <- paste0("SBS", SBS192_sig_number)
SBS192_sig_ids
folder_paths
# Create folder for putting SBS192 signature files
dir.create(path = file.path(folder_paths[1], "SBS192"), showWarnings = FALSE,
recursive = TRUE)
# Create folder for putting SBS192 signature files
SBS192_folder_path <- file.path(folder_paths[1], "SBS192")
# Create folder for putting SBS192 signature files
SBS192_folder_path <- file.path(folder_paths[1], "SBS192")
dir.create(path = SBS192_folder_path, showWarnings = FALSE, recursive = TRUE)
time_used_for_SBS192 <- system.time({
sapply(SBS192_sigs_urls, FUN = function(x) {
download.file(url = x,
destfile = file.path(SBS192_folder_path, basename(x)),
quiet = TRUE)
})
})
# Currently SBS10c, SBS10d, SBS84, SBS85, SBS86, SBS87, SBS89, SBS91 (total 8)
# does not have TSB signature
SBS192_sig_number <- c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90, 92:94)
stopifnot(length(SBS192_sig_number) == 70)
SBS192_sig_ids <- paste0("SBS", SBS192_sig_number)
SBS192_sigs_urls <-
paste0(url_prefix, c(310:376, 47, 48, 51), "/v", release, "_", SBS192_sig_ids,
"_STRAND_BIAS.txt")
# Create folder for putting SBS192 signature files
SBS192_folder_path <- file.path(folder_paths[1], "SBS192")
dir.create(path = SBS192_folder_path, showWarnings = FALSE, recursive = TRUE)
time_used_for_SBS192 <- system.time({
sapply(SBS192_sigs_urls, FUN = function(x) {
download.file(url = x,
destfile = file.path(SBS192_folder_path, basename(x)),
quiet = TRUE)
})
})
print(time_used_for_SBS192)
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <-
paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = genomes[i],
catalog.type = "counts.signature",
region = "genome")
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <-
paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = genomes[i],
catalog.type = "counts.signature",
region = "genome")
browser()
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
dim(SBS96_sig)
genomes[i]
signature[[genomes[i]]]
signature$genomes[i]
genomes
genomes[i]
signature
class(signature)
signature <- list()
class(signature)
signature <- list()
signature[[genomes[i]]]$SBS96 <- SBS96_sig
View(signature)
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <-
paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = genomes[i],
catalog.type = "counts.signature",
region = "genome")
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
library(BSgenome.GSE56939)
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <-
paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
if (genomes[i] %in% c("GRCh37", "GRCh38", "mm10")) {
ref_genome <- genomes[i]
} else {
ref_genome <- NULL
}
browser()
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = genomes[i],
catalog.type = "counts.signature",
region = "genome")
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
foo <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = BSgenome.GSE56939,
catalog.type = "counts.signature",
region = "genome")
foo
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <-
paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
if (genomes[i] %in% c("GRCh37", "GRCh38", "mm10")) {
ref_genome <- genomes[i]
} else {
# ICAMS cannot recognize ref.genome string "mm9" or "rn6"
# Set it to NULL to avoid error
ref_genome <- NULL
}
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = ref_genome,
catalog.type = "counts.signature",
region = "genome")
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
View(signature)
signature$GRCh37$SBS96
signature$GRCh38$SBS96
signature$GRCh37$SBS96
signature$mm10$SBS96
signature$mm9$SBS96
signature$rn6$SBS96
class(signature$GRCh37)
class(signature$GRCh37$SBS96)
attributes(signature$GRCh37$SBS96)
attributes(signature$GRCh37$SBS96)$ref.genome
class(attributes(signature$GRCh37$SBS96)$ref.genome)
foo <- attributes(signature$GRCh37$SBS96)$ref.genome
class(foo)
type(foo)
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <- paste0("COSMIC_v3.2_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
if (genomes[i] %in% c("GRCh37", "GRCh38", "mm10")) {
ref_genome <- genomes[i]
} else {
# ICAMS cannot recognize ref.genome string "mm9" or "rn6"
# Set it to NULL to avoid error
ref_genome <- NULL
}
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = ref_genome,
catalog.type = "counts.signature",
region = "genome")
# Set the attribute "ref.genome" to NULL because this BSgenome class object
# can cause error when transferring between computers
attr(SBS96_sig, "ref.genome") <- NULL
signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
signature$GRCh37$SBS96
# Generate DBS78 signatures
for (i in 1:length(genomes)) {
DBS_sig_filename <- paste0("COSMIC_v3.2_DBS_", genomes[i], ".txt")
DBS_sig_filepath <- file.path(folder_paths[i], DBS_sig_filename)
if (genomes[i] %in% c("GRCh37", "GRCh38", "mm10")) {
ref_genome <- genomes[i]
} else {
# ICAMS cannot recognize ref.genome string "mm9" or "rn6"
# Set it to NULL to avoid error
ref_genome <- NULL
}
DBS78_sig <- ICAMS::ReadCatalog(file = DBS_sig_filepath,
ref.genome = ref_genome,
catalog.type = "counts.signature",
region = "genome")
# Set the attribute "ref.genome" to NULL because this BSgenome class object
# can cause error when transferring between computers
attr(DBS78_sig, "ref.genome") <- NULL
signature[[genomes[i]]]$DBS78 <- DBS78_sig
}
ID.sigs.GRCh37[1]
folder_paths[1]
# Generate ID signatures (only available for GRCh37)
ID_sig_filename
# Generate ID signatures (only available for GRCh37)
ID_sig_filename <- paste0("COSMIC_v", release, "_ID_", "GRCh37", ".txt")
ID_sig_filepath <- file.path(folder_paths[1], ID_sig_filename)
ID_sigs_GRCh37 <- ICAMS::ReadCatalog(file = ID_sig_filepath,
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
ID_sigs_GRCh37
attr(ID_sigs_GRCh37, "ref.genome") <- NULL
ID_sigs_GRCh37
signature[["GRCh37"]]$ID <- ID_sigs_GRCh37
SBS192_sig_folder
# Generate SBS192 signatures (only available for GRCh37)
SBS192_sig_folder <- file.path(folder_paths[1], "SBS192")
SBS192_sig_folder
# Generate ID signatures (only available for GRCh37)
ID_sig_filename <- paste0("COSMIC_v", release, "_ID_", "GRCh37", ".txt")
ID_sig_filepath <- file.path(folder_paths[1], ID_sig_filename)
ID_sig_GRCh37 <- ICAMS::ReadCatalog(file = ID_sig_filepath,
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(ID_sig_GRCh37, "ref.genome") <- NULL
signature[["GRCh37"]]$ID <- ID_sig_GRCh37
# Generate SBS192 signatures (only available for GRCh37)
SBS192_sig_folder <- file.path(folder_paths[1], "SBS192")
SBS192_sig_files <- list.files(path = SBS192_sig_folder, full.names = TRUE)
stopifnot(length(SBS192_sig_files) == 70)
SBS192_sig_list <- lapply(SBS192_sig_files, FUN = function(x){
ICAMS::ReadCatalog(file = x,
catalog.type = "counts.signature",
ref.genome = "GRCh37",
region = "transcript")
})
stopifnot(all(sapply(SBS192_sig_list, FUN = function(x) {
grepl("GRCh37", colnames(x))
})))
SBS192_sig_GRCh37 <- do.call(cbind, SBS192_sig_list)
attr(SBS192_sig_GRCh37, "ref.genome") <- NULL
SBS192_sig_GRCh37 <- do.call(cbind, SBS192_sig_list)
SBS192_sig_GRCh37
attr(SBS192_sig_GRCh37, "ref.genome") <- NULL
# Do some modifications to the column names
colnames(SBS192_sig_GRCh37) <-
gsub(pattern = "_GRCh37", replacement = "", x = colnames(SBS192_sig_GRCh37))
colnames(SBS192_sig_GRCh37) <-
gsub(pattern = ".E", replacement = "-E", x = colnames(SBS192_sig_GRCh37))
colnames(SBS192_sig_GRCh37)
SBS192_sig_files
# Generate SBS192 signatures (only available for GRCh37)
SBS192_sig_folder <- file.path(folder_paths[1], "SBS192")
SBS192_sig_files <- list.files(path = SBS192_sig_folder, full.names = TRUE)
SBS192_sig_files
head(SBS192_sig_files)
head(sort(SBS192_sig_files))
head(order(SBS192_sig_files))
? list.files
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_data.R", echo=TRUE)
devtools::load_all(".")
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_data.R", echo=TRUE)
devtools::load_all(".")
signature$rn6$SBS96
dim(signature$rn6$SBS96)
signature$GRCh37$SBS96
signature$mm9$SBS96
devtools::spell_check()
spelling::update_wordlist()
rstudioapi::navigateToFile("data-raw/COSMIC_v3.2/code/download_COSMIC_v3.2_sigs_from_website.R")
rstudioapi::navigateToFile("data-raw/COSMIC_v3.1/code/download_COSMIC_v3.1_sigs_from_website.R")
# SBS84, SBS85, SBS86, SBS87, SBS89(total 5)
# does not have TSB signature
SBS192_sig_number <- c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90)
stopifnot(length(SBS192_sig_number) == 67)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/download_COSMIC_v3.1_sigs_from_website2.R", echo=TRUE)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/download_COSMIC_v3.1_sigs_from_website2.R", echo=TRUE)
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Generate COSMIC v3.1 genome signatures
library(ICAMS)
release <- "3.1"
genomes <- c("GRCh37", "GRCh38", "mm9", "mm10", "rn6")
mutation_types <- c("SBS", "DBS")
folder_prefix <- paste0("./data-raw/COSMIC_v", release , "/data/")
folder_paths <- paste0(folder_prefix, genomes)
COSMIC_v3.1 <- list()
folder_paths
# Generate SBS96 signatures
for (i in 1:length(genomes)) {
SBS_sig_filename <- paste0("COSMIC_v", release, "_SBS_", genomes[i], ".txt")
SBS_sig_filepath <- file.path(folder_paths[i], SBS_sig_filename)
if (genomes[i] %in% c("GRCh37", "GRCh38", "mm10")) {
ref_genome <- genomes[i]
} else {
# ICAMS cannot recognize ref.genome string "mm9" or "rn6"
# Set it to NULL to avoid error
ref_genome <- NULL
}
SBS96_sig <- ICAMS::ReadCatalog(file = SBS_sig_filepath,
ref.genome = ref_genome,
catalog.type = "counts.signature",
region = "genome")
# Set the attribute "ref.genome" to NULL because this BSgenome class object
# can cause error when transferring between computers
attr(SBS96_sig, "ref.genome") <- NULL
COSMIC_v3.1$signature[[genomes[i]]]$SBS96 <- SBS96_sig
}
# Generate SBS192 signatures (only available for GRCh37)
SBS192_sig_folder <- file.path(folder_paths[1], "SBS192")
SBS192_sig_files <- list.files(path = SBS192_sig_folder, full.names = TRUE)
stopifnot(length(SBS192_sig_files) == 70)
stopifnot(length(SBS192_sig_files) == 67)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/generate_COSMIC_v3.1_genome_sigs2.R", echo=TRUE)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/generate_COSMIC_v3.1_genome_sigs2.R", echo=TRUE)
source("D:/Rpackages/cosmicsig/all-branches/cosmicsig/data-raw/COSMIC_v3.1/code/generate_COSMIC_v3.1_genome_sigs2.R", echo=TRUE)
View(COSMIC_v3.1)
devtools::load_all(".")
devtools::build_manual()
devtools::spell_check()
