library(usethis)
use_gpl3_license()
?use_gpl_license
use_gpl_license(version = 3, include_future = TRUE)
?remotes::install_github
usethis::use_data_raw()
devtools::spell_check()
# Source this file from cosmicsig package root
cat(getwd(), "\n")
source("data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_genome_sigs.R")
source("data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_etiologies.R")
devtools::load_all(".")
devtools::load_all(".")
source("data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_genome_sigs.R")
source("data-raw/COSMIC_v3.2/code/generate_COSMIC_v3.2_etiologies.R")
COSMIC_v3.2 <- list()
COSMIC_v3.2$signature <- signature
COSMIC_v3.2$etiology <- etiology
usethis::use_data(COSMIC_v3.2, overwrite = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
usethis::use_readme_rmd()
devtools::load_all(".")
COSMIC_v3.2$etiology$SBS96
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Download SBS96 signatures from COSMIC v3.2 website
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/452/COSMIC_v3.1_SBS_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_SBS_GRCh37.txt",
quiet = TRUE)
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Download COSMIC v3.1 SBS96 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/441/COSMIC_v3.1_SBS_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_SBS_GRCh37.txt",
quiet = TRUE)
# Download COSMIC v3.1 DBS78 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/435/COSMIC_v3.1_DBS_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_DBS_GRCh37.txt",
quiet = TRUE)
# Download COSMIC v3.1 ID signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/440/COSMIC_v3.1_ID_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_ID_GRCh37.txt",
quiet = TRUE)
# Download SBS192 signatures from COSMIC v3.1 website
# SBS84, SBS85, SBS86, SBS87, SBS89(total 5)
# does not have TSB signature
SBS192.sig.number <- c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90)
stopifnot(length(SBS192.sig.number) == 67)
SBS192.sigs.urls <-
paste0("https://cancer.sanger.ac.uk/sigs-assets-20/SBS_vignettes/sigProfiler_TSB_signatures_SBS",
SBS192.sig.number, ".csv")
time.used.for.SBS192 <- system.time({
sapply(SBS192.sigs.urls, FUN = function(x) {
download.file(url = x,
destfile = paste0("./data-raw/COSMIC.v3.1/data/SBS192/",
basename(x)),
quiet = TRUE)
})
})
# Download SBS192 signatures from COSMIC v3.1 website
# SBS84, SBS85, SBS86, SBS87, SBS89(total 5)
# does not have TSB signature
SBS192.sig.number <- c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90)
stopifnot(length(SBS192.sig.number) == 67)
SBS192.sigs.urls <-
paste0("https://cancer.sanger.ac.uk/sigs-assets-20/SBS_vignettes/sigProfiler_TSB_signatures_SBS",
SBS192.sig.number, ".csv")
time.used.for.SBS192 <- system.time({
sapply(SBS192.sigs.urls, FUN = function(x) {
download.file(url = x,
destfile = paste0("./data-raw/COSMIC_v3.1/data/SBS192/",
basename(x)),
quiet = TRUE)
})
})
print(time.used.for.SBS192)
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Generate COSMIC v3.1 genome signatures
library(ICAMS)
# Generate SBS96 signatures
SBS96.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_SBS_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(SBS96.sigs.GRCh37, "ref.genome") <- NULL
# Generate DBS78 signatures
DBS78.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_DBS_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(DBS78.sigs.GRCh37, "ref.genome") <- NULL
# Generate ID signatures
ID.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.1/data/COSMIC_v3.1_ID_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(ID.sigs.GRCh37, "ref.genome") <- NULL
# Generate SBS192 signatures
SBS192.sigs.files <-
list.files("data-raw/COSMIC_v3.1/data/SBS192/", full.names = TRUE)
# Generate SBS192 signatures
SBS192.sigs.files <-
list.files("data-raw/COSMIC_v3.1/data/SBS192/", full.names = TRUE)
stopifnot(length(SBS192.sigs.files) == 67)
SBS192.sigs.list <- lapply(SBS192.sigs.files, FUN = function(x){
ICAMS::ReadCatalog(x, catalog.type = "counts.signature",
ref.genome = "GRCh37",
region = "transcript")
})
stopifnot(all(sapply(SBS192.sigs.list, FUN = function(x) {
grepl("GRCh37", colnames(x))
})))
SBS192.sigs.GRCh37 <- do.call(cbind, SBS192.sigs.list)
attr(SBS192.sigs.GRCh37, "ref.genome") <- NULL
colnames(SBS192.sigs.GRCh37) <-
gsub(pattern = "_GRCh37", replacement = "", x = colnames(SBS192.sigs.GRCh37))
colnames(SBS192.sigs.GRCh37) <-
gsub(pattern = ".E", replacement = "-E", x = colnames(SBS192.sigs.GRCh37))
# SBS84, SBS85, SBS86, SBS87, SBS89(total 5)
# does not have TSB signature
SBS192.sigs.GRCh37.names.order <-
paste0("SBS", c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90))
need.minus.E <-
c("SBS23", "SBS25", "SBS27", "SBS29",
"SBS42", "SBS45", "SBS46", "SBS59")
SBS192.sigs.GRCh37.names.order <-
sapply(SBS192.sigs.GRCh37.names.order, FUN = function(x) {
ifelse(x %in% need.minus.E, paste0(x, "-E"), x)})
SBS192.sigs.GRCh37 <-
SBS192.sigs.GRCh37[, SBS192.sigs.GRCh37.names.order, drop = FALSE]
dim(SBS192.sigs.GRCh37)
colnames(SBS192.sigs.GRCh37)
# Generate SBS192 signatures
SBS192.sigs.files <-
list.files("data-raw/COSMIC_v3.1/data/SBS192/", full.names = TRUE)
stopifnot(length(SBS192.sigs.files) == 67)
SBS192.sigs.list <- lapply(SBS192.sigs.files, FUN = function(x){
ICAMS::ReadCatalog(x, catalog.type = "counts.signature",
ref.genome = "GRCh37",
region = "transcript")
})
stopifnot(all(sapply(SBS192.sigs.list, FUN = function(x) {
grepl("GRCh37", colnames(x))
})))
SBS192.sigs.GRCh37 <- do.call(cbind, SBS192.sigs.list)
attr(SBS192.sigs.GRCh37, "ref.genome") <- NULL
colnames(SBS192.sigs.GRCh37)
colnames(SBS192.sigs.GRCh37) <-
gsub(pattern = "_GRCh37", replacement = "", x = colnames(SBS192.sigs.GRCh37))
colnames(SBS192.sigs.GRCh37) <-
gsub(pattern = ".E", replacement = "-E", x = colnames(SBS192.sigs.GRCh37))
colnames(SBS192.sigs.GRCh37)
# SBS84, SBS85, SBS86, SBS87, SBS89(total 5)
# does not have TSB signature
SBS192.sigs.GRCh37.names.order <-
paste0("SBS", c(1:6, paste0(7, letters[1:4]), 8:9, paste0(10, letters[1:2]),
11:16, paste0(17, letters[1:2]), 18:60, 88, 90))
SBS192.sigs.GRCh37.names.order
need.minus.E <-
c("SBS23", "SBS25", "SBS27", "SBS29",
"SBS42", "SBS45", "SBS46", "SBS59")
SBS192.sigs.GRCh37.names.order <-
sapply(SBS192.sigs.GRCh37.names.order, FUN = function(x) {
ifelse(x %in% need.minus.E, paste0(x, "-E"), x)})
SBS192.sigs.GRCh37.names.order
SBS192.sigs.GRCh37 <-
SBS192.sigs.GRCh37[, SBS192.sigs.GRCh37.names.order, drop = FALSE]
# Put all the signatures inside a list
COSMIC_v3.1 <- list()
COSMIC_v3.1$signature$genome <- list(SBS96 = SBS96.sigs.GRCh37,
SBS192 = SBS192.sigs.GRCh37,
DBS78 = DBS78.sigs.GRCh37,
ID = ID.sigs.GRCh37)
source("D:/Rpackages/cosmicsig/data-raw/COSMIC_v3.1/code/generate_COSMIC_v3.1_genome_sigs.R", echo=TRUE)
devtools::load_all(".")
dim(COSMIC_v3.1$signature$genome$SBS96)
dim(COSMIC_v3.2$signature$genome$SBS96)
dim(COSMIC_v3.2$signature$genome$SBS192)
dim(COSMIC_v3.1$signature$genome$SBS192)
dim(COSMIC_v3.1$signature$genome$DBS78)
dim(COSMIC_v3.2$signature$genome$DBS78)
dim(COSMIC_v3.2$signature$genome$ID)
dim(COSMIC_v3.1$signature$genome$ID)
devtools::load_all(".")
? COSMIC_v3.1
usethis::use_news_md()
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Download COSMIC v3.0 SBS96 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/430/COSMIC_v3_SBS_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_SBS_GRCh37.txt",
quiet = TRUE)
# Download COSMIC v3.0 DBS78 signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/424/COSMIC_v3_DBS_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_DBS_GRCh37.txt",
quiet = TRUE)
# Download COSMIC v3.0 ID signatures from COSMIC download website
# (https://cancer.sanger.ac.uk/signatures/downloads/)
download.file(url = "https://cancer.sanger.ac.uk/signatures/documents/429/COSMIC_v3_ID_GRCh37.txt",
destfile = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_ID_GRCh37.txt",
quiet = TRUE)
# COSMIC v3.0 SBS192 signatures were from the paper
# Alexandrov, L.B., Kim, J., Haradhvala, N.J. et al.
# The repertoire of mutational signatures in human cancer.
# Nature 578, 94-101 (2020). \doi{10.1038/s41586-020-1943-3}
# and then uploaded to COSMIC website.
#
# As the original URL from COSMIC(v3.0) website can not be found, we download
# SBS192 signatures (COSMIC v3.0) from ICGC Data Portal instead (which keeps a
# copy of the signatures published in the paper mentioned above)
download.file(url = "https://dcc.icgc.org/api/v1/download?fn=/PCAWG/mutational_signatures/Signatures/SP_Signatures/SigProfiler_reference_signatures/Sigprofiler_Transcriptional_Strand_Bias_Signatures/sigProfiler_TSB_signatures.csv
",
destfile = "./data-raw/COSMIC_v3.0/data/sigProfiler_TSB_signatures.csv",
quiet = TRUE)
# Source this file from cosmicsig package root
cat(getwd(), "\n")
# Generate COSMIC v3.0 genome signatures
library(ICAMS)
# Generate SBS96 signatures
SBS96.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_SBS_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(SBS96.sigs.GRCh37, "ref.genome") <- NULL
# Generate DBS78 signatures
DBS78.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_DBS_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(DBS78.sigs.GRCh37, "ref.genome") <- NULL
# Generate ID signatures
ID.sigs.GRCh37 <-
ICAMS::ReadCatalog(file = "./data-raw/COSMIC_v3.0/data/COSMIC_v3.0_ID_GRCh37.txt",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "genome")
attr(ID.sigs.GRCh37, "ref.genome") <- NULL
? ICAMS::ReadCatalog
# Generate SBS192 signatures
SBS192.sigs.GRCh37 <-
ICAMS::ReadCatalog("./data-raw/COSMIC_v3.0/data/sigProfiler_TSB_signatures.csv",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "transcript")
attr(signature$genome$SBS192, "ref.genome") <- NULL
# Put all the signatures inside a list
COSMIC_v3.0 <- list()
dim(SBS192.sigs.GRCh37)
dim(COSMIC_v3.1$signature$genome$SBS192)
SBS192.sigs.GRCh37
# Generate SBS192 signatures
SBS192.sigs.GRCh37 <-
ICAMS::ReadCatalog("./data-raw/COSMIC_v3.0/data/sigProfiler_TSB_signatures.csv",
ref.genome = "GRCh37",
catalog.type = "counts.signature",
region = "transcript")
attr(SBS192.sigs.GRCh37, "ref.genome") <- NULL
SBS192.sigs.GRCh37
foo <- tibble::tibble(1:2)
foo
class(foo)
source("D:/Rpackages/cosmicsig/data-raw/COSMIC_v3.0/code/generate_COSMIC_v3.0_genome_sigs.R", echo=TRUE)
devtools::load_all(".")
dim(COSMIC_v3.0$signature$genome$SBS192)
dim(COSMIC_v3.1$signature$genome$SBS192)
dim(COSMIC_v3.2$signature$genome$SBS192)
source("D:/Rpackages/cosmicsig/data-raw/COSMIC_v3.0/code/generate_COSMIC_v3.0_genome_sigs.R", echo=TRUE)
devtools::load_all(".")
devtools::load_all(".")
get_etiology(mutation_type = "ID", sig_id = c("ID1", "foo", "ID3"))
usethis::use_testthat()
?usethis::use_github_action_check_release
usethis::use_github_action_check_standard()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
usethis::use_git_ignore(ignores = ".Rhistory")
usethis::use_cran_comments()
devtools::load_all(".")
COSMIC_v3.0$signature$genome
devtools::build_manual()
devtools::load_all(".")
View(etiology$SBS96)
library(mSigHdp)
